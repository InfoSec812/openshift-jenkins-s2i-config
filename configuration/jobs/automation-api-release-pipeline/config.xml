<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.7">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <io.fabric8.jenkins.openshiftsync.BuildConfigProjectProperty plugin="openshift-sync@0.0.13">
      <uid></uid>
      <namespace></namespace>
      <name></name>
      <resourceVersion></resourceVersion>
      <contextDir></contextDir>
    </io.fabric8.jenkins.openshiftsync.BuildConfigProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.PasswordParameterDefinition>
          <name>openshift_api_token</name>
          <description></description>
        </hudson.model.PasswordParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>openshift_api_host</name>
          <description></description>
          <defaultValue>10.1.2.2:8443</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <EnvInjectJobProperty plugin="envinject@1.92.1">
      <info>
        <propertiesContent>OPENSHIFT_API_TOKEN=${openshift_api_token}
OPENSHIFT_API_HOST=${openshift_api_host}</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
      <contributors/>
    </EnvInjectJobProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.18">
    <script>node {
    stage (&apos;Code Checkout&apos;) {
        git url: &apos;https://github.com/rht-labs/automation-api.git&apos;, branch: &apos;master&apos;
    }

    stage (&apos;Build App&apos;) {
        echo &apos;Using build tool: mvn-3&apos;
        def toolHome = tool &apos;mvn-3&apos;
        env.JAVA_HOME = tool &apos;java-1.8&apos;
        sh &quot;${toolHome}/bin/mvn clean install&quot;
    }

    stage (&apos;Build Image and Deploy to Dev&apos;) {
        echo &apos;Found label &quot;provider=fabric8&quot;, we are generating the s2i binary build commands&apos;
        env.TRIMMED_OPENSHIFT_API_TOKEN = env.OPENSHIFT_API_TOKEN.replaceAll("\\s","")
        sh &apos;oc login $OPENSHIFT_API_HOST --token=$TRIMMED_OPENSHIFT_API_TOKEN --insecure-skip-tls-verify&apos;
        sh &apos;oc start-build automation-api --from-dir=. --follow -n labs-api-dev&apos;  
    }

    stage (&apos;Deploy to labs-api-delivery&apos;) {
        input &apos;Deploy to labs-api-delivery?&apos;
        openshiftTag apiURL: &quot;$OPENSHIFT_API_HOST&quot;, authToken: &quot;$TRIMMED_OPENSHIFT_API_TOKEN&quot;, destStream: &apos;automation-api&apos;, destTag: &apos;latest&apos;, destinationAuthToken: &quot;$TRIMMED_OPENSHIFT_API_TOKEN&quot;, destinationNamespace: &apos;labs-api-delivery&apos;, namespace: &apos;labs-api-dev&apos;, srcStream: &apos;automation-api&apos;, srcTag: &apos;latest&apos;
        openshiftVerifyDeployment apiURL: &quot;$OPENSHIFT_API_HOST&quot;, authToken: &quot;$TRIMMED_OPENSHIFT_API_TOKEN&quot;, depCfg: &apos;automation-api&apos;, namespace: &apos;labs-api-delivery&apos;
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
</flow-definition>
