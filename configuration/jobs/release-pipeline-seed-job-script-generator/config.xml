<project>
    <actions/>
    <description/>
    <keepDependencies>false</keepDependencies>
    <properties>
        <io.fabric8.jenkins.openshiftsync.BuildConfigProjectProperty plugin="openshift-sync@0.0.13">
            <uid/>
            <namespace/>
            <name/>
            <resourceVersion/>
            <contextDir/>
        </io.fabric8.jenkins.openshiftsync.BuildConfigProjectProperty>
        <hudson.model.ParametersDefinitionProperty>
            <parameterDefinitions>
                <hudson.model.StringParameterDefinition>
                    <name>application_name</name>
                    <description/>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                    <name>config_url</name>
                    <description/>
                </hudson.model.StringParameterDefinition>
                <hudson.model.PasswordParameterDefinition>
                    <name>openshift_api_token</name>
                    <description/>
                </hudson.model.PasswordParameterDefinition>
            </parameterDefinitions>
        </hudson.model.ParametersDefinitionProperty>
    </properties>
    <scm class="hudson.scm.NullSCM"/>
    <canRoam>true</canRoam>
    <disabled>false</disabled>
    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
    <triggers/>
    <concurrentBuild>false</concurrentBuild>
    <builders>
        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.51">
            <scriptText>pipelineJob("${application_name}-release-pipeline") {
              definition{
                cps {
                  script (
                  "dynamicPipeline.withApiToken(OPENSHIFT_API_TOKEN).withHttpConfiguration('${config_url}').withApplicationName('${application_name}').generateAndExecutePipelineScript()"
                  )
                  sandbox(true)
                }
              }
              environmentVariables {
                env('OPENSHIFT_API_TOKEN',"${openshift_api_token}")
                env('SKIP_TLS','true')
              }
            }</scriptText>
            <usingScriptText>true</usingScriptText>
            <ignoreExisting>false</ignoreExisting>
            <ignoreMissingFiles>false</ignoreMissingFiles>
            <removedJobAction>IGNORE</removedJobAction>
            <removedViewAction>IGNORE</removedViewAction>
            <lookupStrategy>JENKINS_ROOT</lookupStrategy>
        </javaposse.jobdsl.plugin.ExecuteDslScripts>
    </builders>
    <publishers/>
    <buildWrappers/>
</project>